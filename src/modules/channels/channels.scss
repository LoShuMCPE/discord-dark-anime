$userbarHeight: 68px;
.da-membersWrap {
  margin-bottom: $userbarHeight - 30px;
}

.da-channels {
  $height: 34px;
  $marginReset-size: $height - 4px;
  position: relative;
  &:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: parseVar("channel-background");
    background-size: parseVar("channel-background-size");
    background-position: parseVar("channel-background-position");
    opacity: parseVar("channel-background-opacity");
    filter: blur(parseVar("channel-background-blur"));
  }
  header.da-header {
    @include shadow(3);
  }
  .da-containerDefault {
    & > .da-wrapper {
      &:hover:not([class*="modeSelected-"]) {
        & > .da-content {
          color: rgba(#fff, 0.675);
          background-color: transparent;
        }
      }
      &[class*="modeSelected-"] {
        & > .da-content {
          color: rgba(#fff, 1);
          background-color: rgba($primary, 0.25);
          svg.da-icon {
            color: #fff;
            opacity: 1;
          }
        }
      }
    }
    & > .da-wrapper > .da-content {
      margin: 0;
      border-radius: 0px !important;
      @include transition(
        background-color 0.12s ease-out,
        color 0.12s ease-out,
        box-shadow 0.12s ease-out
      );
      $testing: true;
      @include box-shadow(inset 0 0 35px -35px transparent);
      &.da-contentSelectedText {
        & > .da-marginReset:first-child {
          @if ($testing) {
            &:before {
              transform: translate(-25%, -50%);
            }
          } @else {
            &:before {
              background-color: rgba(#fff, 0.9);
            }
          }
        }
        @include box-shadow(
          inset 70px 0 35px -35px rgba(config("primary"), 0.5)
        );
        &:hover {
          @include box-shadow(
            inset 100px 0 50px -50px rgba(config("primary"), 0.7)
          );
        }
      }
      > .da-marginReset:first-child {
        position: relative;
        padding-right: $marginReset-size - 6px;
        @if ($testing) {
          margin-right: -8px;
          &:before {
            $size: $height - 20px;
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            transform: translate(-100%, -50%);
            height: $size;
            width: $size;
            background: #fff;
            border-radius: 50%;
            @include transition(all 0.2s ease-out);
          }
        } @else {
          &:before {
            content: "";
            $size: $height - 24px;
            height: $size;
            width: $size;
            background-color: rgba(#fff, 0.35);
            position: absolute;
            left: 4px;
            top: -4px;
            border-radius: 50%;
          }
        }
        svg {
          display: none;
        }
      }
    }
  }
  .da-wrapperDefaultText {
    .da-nameDefaultText,
    .da-nameDefaultVoice,
    .da-nameLockedText,
    .da-nameLockedVoice {
      @include transition(color 0.12s ease-out);
      color: rgba(lighten($primary, 15), 0.5);
    }
  }
  .da-wrapperHoveredText {
    .da-nameHoveredText,
    .da-nameHoveredVoice {
      @include transition(color 0.12s ease-out);
      color: rgba(lighten($primary, 20), 0.9);
    }
  }
  .da-wrapper {
    position: relative;
    .da-unread {
      @include transition(all 0.12s ease-out);
      $subheight: 18px;
      top: 50%;
      left: 0;
      margin-top: -$subheight/2;
      height: auto;
      border-radius: 50%;
      width: $height - $subheight;
      height: $height - $subheight;
      line-height: 1;
      background-color: rgba(lighten($primary, 10), 1);
      transform: translate(-50%, 0);
      @include transition(all 0.2s ease-out);
      will-change: background-color, opacity, transform;
      & + .da-content {
        .da-marginReset:first-child {
          &:before {
            transform: translate(-50%, -50%);
          }
        }
      }
    }
  }
  .da-wrapperUnreadText {
    .da-nameUnreadText {
      color: rgba(lighten($primary, 25), 1);
    }
  }
  & > .da-container:last-child {
    position: relative;
    $radSize: 200px;
    &:after {
      content: "";
      z-index: 0;
      position: absolute;
      top: 50%;
      left: 50%;
      width: $radSize;
      height: $radSize;
      @include transform(translate(-50%, 20px));
      @include transition(all 0.125s ease-in-out);
      background-color: rgba(config(primary), 0.75);
      @include border-radius(50%);
      filter: blur(20px);
      opacity: 0;
      will-change: transform, opacity;
    }
    @include transition(box-shadow 0.12s ease-out);
    &:hover {
      &:after {
        @include transform(translate(-50%, -5px));
        opacity: 0.75;
      }
    }
    &:before {
      content: "";
      position: absolute;
      left: 0;
      height: 1px;
      bottom: 100%;
      width: 100%;
      @include linear-gradient(
        to right,
        rgba(config(primary), 0),
        rgba(config(primary), 0.8),
        rgba(config(primary), 1),
        rgba(config(primary), 0.8),
        rgba(config(primary), 0)
      );
    }
    & > .da-wrapper[class*="avatar-"] {
      & > .da-inner {
        @include border-radius(config(radius));
      }
    }
    & > .da-accountDetails {
      z-index: 99;
      & + div {
        z-index: 99;
        .da-button {
          @include border-radius(50%);
          background-color: rgba(#fff, 0);
          &:hover {
            background-color: rgba(#fff, 0.15);
          }
          @include transition(all 0.125s ease-in-out);
          will-change: background-color;
        }
      }
    }
  }
}
